# quadEM_TimeSeries.template
# Author:  Mark Rivers
# Date:    Nov. 12, 2003
# This is a database for the MCA records in quadEM.  There are 11 total:
# mca1  = diode current 1
# mca2  = diode current 2
# mca3  = diode current 3
# mca4  = diode current 4
# mca5  = sum 1+2
# mca6  = sum 3+4
# mca7  = sum 1+2+3+4
# mca8  = difference 2-1
# mca9  = difference 4-3
# mca10 = position (2-1)/(2+1)
# mca11 = position (4-3)/(4+3)

record(bi,"$(P)$(R)SNL_Connected") {
  field(ZNAM, "Not connected")
  field(ZSV,  "MAJOR")
  field(ONAM, "Connected")
  field(OSV,  "NO_ALARM")
}

record(bo,"$(P)$(R)EraseAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_ERASE")
  field(ZNAM, "Done")
  field(ONAM, "Erase")
  field(VAL,  "1")
  field(FLNK, "$(P)$(R)ReadAllOnce")
}

record(bo,"$(P)$(R)EraseStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_ERASE")
  field(ZNAM, "Done")
  field(ONAM, "Erase")
  field(VAL,  "1")
  field(FLNK, "$(P)$(R)StartAll.PROC")
}

record(bo,"$(P)$(R)StartAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_START_ACQUIRE")
  field(ZNAM, "Done")
  field(ONAM, "Start")
  field(VAL,  "1")
  field(FLNK, "$(P)$(R)SetAcquiring.PROC")
}

record(bo,"$(P)$(R)SetAcquiring") {
  field(OUT,  "$(P)$(R)Acquiring PP MS")
  field(ZNAM, "Done")
  field(ONAM, "Set")
  field(VAL,  "1")
  field(FLNK, "$(P)$(R)SetClientWait.PROC")
}

record(busy,"$(P)$(R)Acquiring") {
  field(ZNAM, "Done")
  field(ONAM, "Acquiring")
}

record(bo,"$(P)$(R)StopAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_STOP_ACQUIRE")
  field(ZNAM, "Done")
  field(ONAM, "Stop")
  field(VAL,  "1")
}

record(ao,"$(P)$(R)PresetReal") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0)MCA_PRESET_REAL")
  field(VAL,  "0.0")
  field(PREC, "2")
}

record(bi,"$(P)$(R)HardwareAcquiring") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)MCA_ACQUIRING")
  field(ZNAM, "Done")
  field(ONAM, "Acquiring")
  field(SCAN, "I/O Intr")
}

record(ai,"$(P)$(R)ElapsedReal") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0)MCA_ELAPSED_REAL")
  field(PREC, "2")
  field(SCAN, "I/O Intr")
}

record(bo,"$(P)$(R)ReadAll") {
  field(SCAN, "1 second")
  field(DISV, "0")
  field(SDIS, "$(P)$(R)Acquiring NPP NMS")
  field(ZNAM, "Done")
  field(ONAM, "Read")
  field(FLNK, "$(P)$(R)ReadAllOnce")
}

record(bo,"$(P)$(R)ReadAllOnce") {
  field(VAL,  "1")
  field(OUT,  "$(P)$(R)DoReadAll.VAL PP MS")
}

record(bo,"$(P)$(R)DoReadAll") {
  field(ZNAM, "Done")
  field(ONAM, "Read")
}

record(longout,"$(P)$(R)NuseAll") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(VAL,  "$(NCHAN)")
  field(OUT,  "@asyn($(PORT),0)MCA_NUM_CHANNELS")
}

record(longin,"$(P)$(R)CurrentChannel") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)FAST_SWEEP_CURRENT_CHANNEL")
  field(SCAN, "I/O Intr")
}

record(longin,"$(P)$(R)MaxChannels") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)FAST_SWEEP_MAX_CHANNELS")
}

record(ao,"$(P)$(R)Dwell") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0)MCA_DWELL_TIME")
  field(VAL,  "0.1")
  field(PREC, "3")
}

record(ai,"$(P)$(R)Dwell_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0)MCA_DWELL_TIME")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
}

record(ao,"$(P)$(R)PresetReal") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0)MCA_PRESET_REAL")
  field(VAL,  "0")
  field(PREC, "3")
}

record(mca,"$(P)$(R)mca1")
{
    field(DESC, "Current 1")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 0)")
}
record(mca,"$(P)$(R)mca2")
{
    field(DESC, "Current 2")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 1)")
}
record(mca,"$(P)$(R)mca3")
{
    field(DESC, "Current 3")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 2)")
}
record(mca,"$(P)$(R)mca4")
{
    field(DESC, "Current 4")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 3)")
}
record(mca,"$(P)$(R)mca5")
{
    field(DESC, "Sum 1+2")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 4)")
}
record(mca,"$(P)$(R)mca6")
{
    field(DESC, "Sum 3+4")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 5)")
}
record(mca,"$(P)$(R)mca7")
{
    field(DESC, "Sum 1+2+3+4")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 6)")
}
record(mca,"$(P)$(R)mca8")
{
    field(DESC, "Difference 2-1")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 7)")
}
record(mca,"$(P)$(R)mca9")
{
    field(DESC, "Difference 4-3")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 8)")
}
record(mca,"$(P)$(R)mca10")
{
    field(DESC, "Position 1&2")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 9)")
}
record(mca,"$(P)$(R)mca11")
{
    field(DESC, "Position 3&4")
    field(DTYP, "asynMCA")
    field(PINI, "YES")
    field(NMAX, "$(NCHAN)")
    field(NUSE, "$(NCHAN)")
    field(PREC, "3")
    field(INP,  "@asyn($(PORT) 10)")
}
record(waveform,"$(P)$(R)Xaxis")
{
    field(DESC, "X axis data")
    field(NELM, "$(NCHAN)")
    field(FTVL, "DOUBLE")
    field(PREC, "3")
}

record(bo,"$(P)$(R)EnableClientWait") {
  field(PINI, "YES")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(bo,"$(P)$(R)SetClientWait") {
  field(DISV, "0")
  field(SDIS, "$(P)$(R)EnableClientWait NPP NMS")
  field(OMSL, "closed_loop")
  field(DOL,  "1")
  field(OUT,  "$(P)$(R)ClientWait PP MS")
  field(ONAM, "SetClientWait")
  field(ZNAM, "Done")
}

record(busy,"$(P)$(R)ClientWait") {
}

# asyn record for debugging
record(asyn, "$(P)$(R)Asyn") {
  field(PORT, "$(PORT)")
}
