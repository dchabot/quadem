errlogInit(5000)
< envPaths

# Tell EPICS all about the record types, device-support modules, drivers,
# etc. in this build
dbLoadDatabase("../../dbd/quadEMTestApp.dbd")
quadEMTestApp_registerRecordDeviceDriver(pdbbase)

#drvAsynIPPortConfigure("portName","hostInfo",priority,noAutoConnect,
#                        noProcessEos)
drvAsynIPPortConfigure("IP_AH401B", "164.54.160.240:10001", 0, 0, 0)
asynOctetSetInputEos("IP_AH401B",0,"\r\n")
asynOctetSetOutputEos("IP_AH401B",0,"\r")

asynSetTraceIOMask("IP_AH401B",0,2)
#asynSetTraceMask("IP_AH401B",0,9)

# Load asynRecord record
dbLoadRecords("$(ASYN)/db/asynRecord.db", "P=quadEMTest:, R=asyn1,PORT=IP_AH401B,ADDR=0,OMAX=256,IMAX=256")

drvAH401BConfigure("AH401B", "IP_AH401B")
dbLoadRecords("$(QUADEM)/quadEMApp/Db/quadEM.template", "P=quadEMTest:, R=QE1:, PORT=AH401B")
dbLoadRecords("$(QUADEM)/quadEMApp/Db/AH401B.template", "P=quadEMTest:, R=QE1:, PORT=AH401B")

# initFastSweep(portName, inputName, maxSignals, maxPoints)
#  portName = asyn port name for this new port (string)
#  inputName = name of asynPort providing data
#  maxSignals  = maximum number of signals (spectra)
#  maxPoints  = maximum number of channels per spectrum
#  dataString  = drvInfo string for current and position data
#  intervalString  = drvInfo string for time interval per point
initFastSweep("QE1TS", "AH401B", 11, 2048, "QE_INT_ARRAY_DATA", "QE_SAMPLE_TIME")
dbLoadRecords("$(QUADEM)/quadEMApp/Db/quadEM_TimeSeries.template", "P=quadEMTest:,R=QE1:,NUM_TS=2048,NUM_FREQ=1024,PORT=QE1TS")

set_requestfile_path("./")
set_requestfile_path("$(QUADEM)/quadEMApp/Db")
set_savefile_path("./autosave")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
save_restoreSet_status_prefix("quadEMTest:")
dbLoadRecords("$(AUTOSAVE)/asApp/Db/save_restoreStatus.db", "P=quadEMTest:")

iocInit()

# save settings every thirty seconds
create_monitor_set("auto_settings.req",30,"P=quadEMTest:")

seq("quadEM_SNL", "P=quadEMTest:, R=QE1:, NUM_CHANNELS=2048")

